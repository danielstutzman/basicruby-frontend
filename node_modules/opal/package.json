{
  "_args": [
    [
      "opal@git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
      "/Users/daniel/dev/basicruby-frontend"
    ]
  ],
  "_from": "git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
  "_id": "opal@0.7.6-dev-patches-to-20140504",
  "_inCache": true,
  "_installable": true,
  "_location": "/opal",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/danielstutzman/opal/0.7.6-dev-patches-to-20140504/package.json",
      "gitUrl": "git://github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
      "httpsUrl": "git+https://github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
      "shortcut": "github:danielstutzman/opal#0.7.6-dev-patches-to-20140504",
      "ssh": "git@github.com:danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
      "sshUrl": "git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
      "type": "github"
    },
    "name": "opal",
    "raw": "opal@git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
    "rawSpec": "git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
    "scope": null,
    "spec": "git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/danielstutzman/opal.git#e02f90b06f84b2b88a8f0766ccc3e4228ad181bb",
  "_shasum": "fc2f3aeb739e3df9bf81312bf40d2926b05fff3a",
  "_shrinkwrap": null,
  "_spec": "opal@git+ssh://git@github.com/danielstutzman/opal.git#0.7.6-dev-patches-to-20140504",
  "_where": "/Users/daniel/dev/basicruby-frontend",
  "dependencies": {},
  "description": "To build opal.js run ./bundle_install.sh then bundle exec ruby build.rb",
  "devDependencies": {},
  "gitHead": "e02f90b06f84b2b88a8f0766ccc3e4228ad181bb",
  "main": "./opal.js",
  "name": "opal",
  "optionalDependencies": {},
  "readme": "# Opal\n\n[![Build Status](https://secure.travis-ci.org/opal/opal.svg?branch=master)](http://travis-ci.org/opal/opal)\n[![Gem Version](https://badge.fury.io/rb/opal.svg)](http://badge.fury.io/rb/opal)\n[![Code Climate](http://img.shields.io/codeclimate/github/opal/opal.svg)](https://codeclimate.com/github/opal/opal)\n\nOpal is a ruby to javascript source-to-source compiler. It also has an\nimplementation of the ruby corelib.\n\nOpal is [hosted on github](http://github.com/opal/opal), and there\nis a Freenode IRC channel at [#opal](http://webchat.freenode.net/?channels=opal),\nask questions on [stackoverflow#opalrb](http://stackoverflow.com/questions/ask?tags=opalrb).\n\n\n\n## Usage\n\nSee the website, [http://opalrb.org](http://opalrb.org).\n\n### Compiling ruby code\n\n`Opal.compile` is a simple interface to just compile a string of ruby into a\nstring of javascript code.\n\n```ruby\nOpal.compile(\"puts 'wow'\")  # => \"(function() { ... })()\"\n```\n\nRunning this by itself is not enough, you need the opal runtime/corelib.\n\n### Building the corelib\n\n`Opal::Builder` can be used to build the runtime/corelib into a string.\n\n```ruby\nOpal::Builder.build('opal') #=> \"(function() { ... })()\"\n```\n\n### Running compiled code\n\nYou can write the above two strings to file, and run as:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script src=\"opal.js\"></script>\n    <script src=\"app.js\"></script>\n  </head>\n</html>\n```\n\nJust open a browser to this page and view the console.\n\n## Running tests\n\nFirst, install dependencies:\n\n    $ bundle install\n\nRubySpec related repos must be cloned as a gitsubmodules:\n\n    $ git submodule update --init\n\nThe test suite can be run using (requires [phantomjs][]):\n\n    $ rake\n\nThis will command will run all RSpec and MSpec examples in sequence.\n\n### MSpec\n\n[MSpec][] tests can be run with:\n\n    $ rake mspec\n\nAlternatively, you can just load up a rack instance using `rackup spec/config.ru`, and\nvisit `http://localhost:9292/` in any web browser.\n\n#### Automated runs\n\n[spectator][] can be used in an autotest fashion with this command\n\n```shell\nspectator .spectator-mspec # this will run RSpec examples only\n```\n\n\n\n### Rspec\n\n[RSpec][] tests can be run with\n\n    $ rake rspec\n\n#### Automated runs\n\n[spectator][] can be used in an autotest fashion with this command\n\n```shell\nspectator # this will run RSpec examples only\n```\n\n\n## Code Overview\n\nWhat code is supposed to run where?\n\n* `lib/` code runs inside your ruby env. It compiles ruby to javascript.\n* `opal/` is the runtime/corelib for our implementation (runs in browser)\n* `stdlib/` is our implementation of ruby stdlib. It is optional (for browser).\n\n### lib\n\nThe `lib` directory holds the opal parser/compiler used to compile ruby\ninto javascript. It is also built ready for the browser into `opal-parser.js`\nto allow compilation in any javascript environment.\n\n### corelib\n\nThis directory holds the opal runtime and corelib implemented in ruby and\njavascript.\n\n### stdlib\n\nHolds the stdlib that opal currently supports. This includes Observable,\nStringScanner, Date, etc.\n\n### spec\n\n* **rubyspecs** (file) a whitelist of RubySpec files to be ran\n* **corelib** RubySpec examples (submodule)\n* **stdlib** `rubysl-*` examples (submodules)\n* **filters** The list of MSpec/RubySpec examples that are either bugs or unsupported\n* **opal** opal additions/special behaviour in the runtime/corelib\n* **cli** specs for opal lib (parser, lexer, grammar, compiler etc)\n\n## Browser support\n\n* Internet Explorer 6+\n* Firefox (Current - 1) or Current\n* Chrome (Current - 1) or Current\n* Safari 5.1+\n* Opera 12.1x or (Current - 1) or Current\n\nAny problem above browsers should be considered and reported as a bug.\n\n(Current - 1) or Current denotes that we support the current stable version of\nthe browser and the version that preceded it. For example, if the current\nversion of a browser is 24.x, we support the 24.x and 23.x versions.\n\n12.1x or (Current - 1) or Current denotes that we support Opera 12.1x as well\nas last 2 versions of Opera. For example, if the current Opera version is 20.x,\nwe support Opera 12.1x, 19.x and 20.x but not Opera 15.x through 18.x.\n\nCross-browser testing sponsored by [BrowserStack](http://browserstack.com).\n\n## License\n\n(The MIT License)\n\nCopyright (C) 2013 by Adam Beynon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n[phantomjs]: http://phantomjs.org\n[spectator]: https://github.com/elia/spectator#readme\n[MSpec]: https://github.com/rubyspec/mspec#readme\n[RSpec]: https://github.com/rspec/rspec#readme\n",
  "readmeFilename": "README.md",
  "version": "0.7.6-dev-patches-to-20140504"
}
